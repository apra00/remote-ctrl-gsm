#!/bin/bash
set -e
export DEBIAN_FRONTEND=noninteractive

RED='\033[0;31m'
GREEN='\033[0;32m'
CYAN='\033[0;36m'
NC='\033[0m'
if [[ "x${EUID}" != "x0" ]]; then
  printf "${RED}Please run as root${NC}\n"
  exit 1
fi

printf "${CYAN}Configuring VPN secrets${NC}\n"
FILE=/opt/config.json
if [[ ! -f "$FILE" ]]; then
  read -p 'PPTP username: ' USER_NAME

  if [[ "x${USER_NAME}" = "x" ]]; then
    printf "${RED}Error: username is empty${NC}\n"
    exit 1
  fi

  read -s -p 'PPTP password: ' USER_PASSWORD

  if [[ "x${USER_PASSWORD}" = "x" ]]; then
    printf  "${RED}Error: password is empty${NC}\n"
    exit 1
  fi
  export SMARTTHINGS_PAGE=' '
  read -p "Do you need Smartthings integration? " -n 1 -r
  echo    # (optional) move to a new line
  if [[ $REPLY =~ ^[Yy]$ ]]
  then
      FILE=/opt/remote-ctrl-gsm.json
      if [[ ! -f "$FILE" ]]; then
          echo '{"port":8099,"portUI":8080,"smartthings":{"devices":[]},"smartapp":["https://graph.api.smartthings.com","https://graph-na02-useast1.api.smartthings.com","https://graph-na04-useast2.api.smartthings.com","https://graph-eu01-euwest1.api.smartthings.com","https://graph-ap02-apnortheast2.api.smartthings.com"],"users":[{"id":"0","username":"admin","password":"admin"}],"connectionType":"local"}'>/opt/remote-ctrl-gsm.json
      fi
      export SMARTTHINGS_PAGE=' -p 8080:8080 -p 8099:8099 -v /opt/remote-ctrl-gsm.json:/opt/config/remote-ctrl-gsm.json '
  fi

  echo "{\"users\":{\"${USER_NAME}\":{\"password\":\"${USER_PASSWORD}\",\"ip\":\"192.168.122.10\",\"forwarding\":[{\"sourceIp\":\"192.168.8.46\",\"sourcePort\":\"8080\",\"destinationPort\":7894}]}}}" >/opt/config.json
  chown -R $(whoami):$(whoami) /opt/config.json

  printf "${GREEN}PPTP secret created${NC}\n"
else
  printf "${GREEN}PPTP secret exists${NC}\n"
fi


printf "${CYAN}Starting installing Docker${NC}\n"
apt-get update && sudo apt-get install -y iptables git iptables-persistent
apt-get remove docker docker.io containerd runc
curl -sSL https://get.docker.com | bash
set +e
groupadd docker
usermod -aG docker $USER
#newgrp docker
set -e
printf "${GREEN}Docker successfully installed${NC}\n"

printf  "${CYAN}Starting configuring host${NC}\n"
echo "nf_nat_pptp" >> /etc/modules
echo "ip_gre" >> /etc/modules
iptables -I FORWARD -p gre -j ACCEPT
iptables-save > /etc/iptables/rules.v4
printf "${GREEN}IpTables successfully configured${NC}"
sysctl -w net.ipv4.ip_forward=1
sysctl -w net.netfilter.nf_conntrack_helper=1
echo "net.ipv4.ip_forward=1">/etc/sysctl.conf
echo "net.netfilter.nf_conntrack_helper=1">/etc/sysctl.conf
printf "${GREEN}enabled IP forwarding${NC}\n"

printf "${CYAN}running docker image${NC}\n"
set +e
docker stop remote-ctrl
docker rm remote-ctrl
docker image prune -a -f
set -e
docker run -d --name=remote-ctrl ${SMARTTHINGS_PAGE} -p 1723:1723 -p 7894:7894 -v /opt/config.json:/opt/config.json --privileged --restart=always vassio/remote-ctrl-pptp:latest
printf "${CYAN}Rebooting${NC}\n"
reboot
